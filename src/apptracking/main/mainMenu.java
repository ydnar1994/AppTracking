/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apptracking.main;

import apptracking.entry.beranda;
import apptracking.entry.masterArmada;
import apptracking.entry.masterHarga;
import apptracking.entry.masterRole;
import apptracking.entry.masterFaktur;
import apptracking.entry.masterKirim;
import apptracking.entry.masterUser;
import apptracking.funct.koneksi;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.event.MouseInputListener;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author reki.pebriana
 */
public class mainMenu extends javax.swing.JFrame {

    /**
     * Creates new form mainMenu
     */
    private Connection conn = new koneksi().connect();
    BorderLayout layout = new BorderLayout();
    masterRole mstRole;
    masterArmada mstArmada;
    masterHarga mstHarga;
    masterKirim mstKirim;
    masterFaktur mstFaktur;
    beranda beranda;
    masterUser mstUser;

    public mainMenu() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);

        execute();
        
        beranda     = new beranda();
        mstUser     = new masterUser();
        mstRole     = new masterRole();
        mstArmada   = new masterArmada();
        mstHarga    = new masterHarga();
        mstKirim   = new masterKirim();
        mstFaktur   = new masterFaktur();
        jPMain.setLayout(layout);
        jPMain.add(beranda, BorderLayout.CENTER);
        jPMain.add(mstUser, BorderLayout.WEST);
        jPMain.add(mstRole, BorderLayout.WEST);
        jPMain.add(mstArmada, BorderLayout.WEST);
        jPMain.add(mstHarga, BorderLayout.WEST);
        jPMain.add(mstKirim, BorderLayout.WEST);
        jPMain.add(mstFaktur, BorderLayout.WEST);
        beranda.setVisible(true);
        mstUser.setVisible(false);
        mstRole.setVisible(false);
        mstArmada.setVisible(false);
        mstHarga.setVisible(false);
        mstKirim.setVisible(false);
        mstFaktur.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pn_navbar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbl_logout = new javax.swing.JLabel();
        pn_sidebar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pn_menus = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbl_iconuser = new javax.swing.JLabel();
        jPMain = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pn_navbar.setBackground(new java.awt.Color(77, 116, 49));
        pn_navbar.setPreferredSize(new java.awt.Dimension(771, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/iconjdx.png"))); // NOI18N

        lbl_logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png"))); // NOI18N
        lbl_logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_logoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pn_navbarLayout = new javax.swing.GroupLayout(pn_navbar);
        pn_navbar.setLayout(pn_navbarLayout);
        pn_navbarLayout.setHorizontalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(lbl_logout)
                .addContainerGap(570, Short.MAX_VALUE))
        );
        pn_navbarLayout.setVerticalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lbl_logout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pn_navbar, java.awt.BorderLayout.PAGE_START);

        pn_sidebar.setBackground(new java.awt.Color(255, 255, 255));
        pn_sidebar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, new java.awt.Color(51, 51, 51)));
        pn_sidebar.setPreferredSize(new java.awt.Dimension(250, 372));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(250, 100));

        pn_menus.setBackground(new java.awt.Color(255, 255, 255));
        pn_menus.setForeground(new java.awt.Color(255, 255, 255));
        pn_menus.setPreferredSize(new java.awt.Dimension(230, 350));
        pn_menus.setLayout(new javax.swing.BoxLayout(pn_menus, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(pn_menus);

        javax.swing.GroupLayout pn_sidebarLayout = new javax.swing.GroupLayout(pn_sidebar);
        pn_sidebar.setLayout(pn_sidebarLayout);
        pn_sidebarLayout.setHorizontalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
        );
        pn_sidebarLayout.setVerticalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
        );

        getContentPane().add(pn_sidebar, java.awt.BorderLayout.LINE_START);

        jPanel3.setBackground(new java.awt.Color(77, 116, 49));
        jPanel3.setPreferredSize(new java.awt.Dimension(771, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Kelompok 1");
        jLabel2.setPreferredSize(new java.awt.Dimension(105, 18));

        lbl_iconuser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/personuser.png"))); // NOI18N
        lbl_iconuser.setPreferredSize(new java.awt.Dimension(105, 18));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lbl_iconuser, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(582, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_iconuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPMain.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPMainLayout = new javax.swing.GroupLayout(jPMain);
        jPMain.setLayout(jPMainLayout);
        jPMainLayout.setHorizontalGroup(
            jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 521, Short.MAX_VALUE)
        );
        jPMainLayout.setVerticalGroup(
            jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 352, Short.MAX_VALUE)
        );

        getContentPane().add(jPMain, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(787, 450));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_logoutMouseClicked
        // TODO add your handling code here:
        String ObjButton[] = {"YES", "NO"};
        int pilihan = JOptionPane.showOptionDialog(null, "Apakah Anda yakin ingin keluar?", "Message", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, ObjButton, ObjButton[1]);
        if (pilihan == 0) {
            loginpage mn = new loginpage();
            mn.setVisible(true);
            this.dispose();
            pn_menus.revalidate();

        }

    }//GEN-LAST:event_lbl_logoutMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPMain;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_iconuser;
    private javax.swing.JLabel lbl_logout;
    private javax.swing.JPanel pn_menus;
    private javax.swing.JPanel pn_navbar;
    private javax.swing.JPanel pn_sidebar;
    // End of variables declaration//GEN-END:variables

    private void execute() {
        ImageIcon iconHome = new ImageIcon(getClass().getResource("/image/home.png"));
        ImageIcon iconMaster = new ImageIcon(getClass().getResource("/image/master.png"));
        ImageIcon iconmasHarga = new ImageIcon(getClass().getResource("/image/pricetags.png"));
        ImageIcon iconmasArmada = new ImageIcon(getClass().getResource("/image/boat.png"));
        ImageIcon iconTransaksi = new ImageIcon(getClass().getResource("/image/transaksi.png"));
        ImageIcon iconSetting = new ImageIcon(getClass().getResource("/image/setting.png"));
        ImageIcon iconUser = new ImageIcon(getClass().getResource("/image/person.png"));
        ImageIcon iconLaporan = new ImageIcon(getClass().getResource("/image/report.png"));
        ImageIcon iconInvoice = new ImageIcon(getClass().getResource("/image/invoice.png"));
        ImageIcon iconPengiriman = new ImageIcon(getClass().getResource("/image/packet.png"));

        
//      MENU DATA
        itemMenu masKaryawan = new itemMenu(null, true, iconUser, "Data Karyawan", null);
        itemMenu masArmada = new itemMenu(null, true, iconmasArmada, "Data Armada", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jPMain.add(mstArmada, BorderLayout.WEST);
                if (beranda.getParent() != null) {
                    jPMain.remove(beranda.getParent());
                    beranda.setVisible(false);
                }
                if (mstUser.getParent() != null) {
                    jPMain.remove(mstUser.getParent());
                    mstUser.setVisible(false);
                }
                if (mstRole.getParent() != null) {
                    jPMain.remove(mstRole.getParent());
                    mstRole.setVisible(false);
                }
                if (mstHarga.getParent() != null) {
                    jPMain.remove(mstHarga.getParent());
                    mstHarga.setVisible(false);
                }
                
                if (mstKirim.getParent() != null) {
                    jPMain.remove(mstKirim.getParent());
                    mstKirim.setVisible(false);
                }

                if (mstFaktur.getParent() != null) {
                    jPMain.remove(mstFaktur.getParent());
                    mstFaktur.setVisible(false);
                }

                mstArmada.setVisible(true);
            }
        });

        itemMenu masHarga = new itemMenu(null, true, iconmasHarga, "Data Harga", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jPMain.add(mstHarga, BorderLayout.WEST);
                if (beranda.getParent() != null) {
                    jPMain.remove(beranda.getParent());
                    beranda.setVisible(false);
                }
                if (mstUser.getParent() != null) {
                    jPMain.remove(mstUser.getParent());
                    mstUser.setVisible(false);
                }
                if (mstRole.getParent() != null) {
                    jPMain.remove(mstRole.getParent());
                    mstRole.setVisible(false);
                }
                if (mstArmada.getParent() != null) {
                    jPMain.remove(mstArmada.getParent());
                    mstArmada.setVisible(false);
                }
                
                if (mstKirim.getParent() != null) {
                    jPMain.remove(mstKirim.getParent());
                    mstKirim.setVisible(false);
                }
                
                if (mstFaktur.getParent() != null) {
                    jPMain.remove(mstFaktur.getParent());
                    mstFaktur.setVisible(false);
                }

                mstHarga.setVisible(true);
            }
        });

//      MENU LAPORAN
        itemMenu lapKaryawan = new itemMenu(null, true, iconLaporan, "Data Karyawan", null);
        itemMenu laptarifKapal = new itemMenu(null, true, iconLaporan, "Tarif Pengiriman Kapal", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    String namaFile = "src/laporan/tarifpengiriman.jasper";
                    Connection conn = new koneksi().connect();
                    HashMap parameter = new HashMap();

                    File report_file = new File(namaFile);
                    JasperReport jasperReport = (JasperReport) JRLoader.loadObject(report_file.getPath());
                    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameter, conn);
                    //JasperViewer.viewReport(jasperPrint, false);
                    // JasperViewer.setDefaultLookAndFeelDecorated(true);

                    JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
                    jasperViewer.setExtendedState(jasperViewer.getExtendedState() | javax.swing.JFrame.MAXIMIZED_BOTH);
                    jasperViewer.setVisible(true);
                } catch (Exception e1) {
                    JOptionPane.showMessageDialog(null, "Gagal membuka Laporan", "Cetak laporan", JOptionPane.ERROR_MESSAGE);

                }
            }
        });

        itemMenu laptarifLCL = new itemMenu(null, true, iconLaporan, "Tarif Pengiriman LCL", null);
        itemMenu lapPengiriman = new itemMenu(null, true, iconLaporan, "Transaksi Pengiriman", null);

//      MENU TRANSAKSI 
        itemMenu mnuPengiriman = new itemMenu(null, true, iconPengiriman, "Pengiriman",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jPMain.add(mstKirim, BorderLayout.WEST);
                if (beranda.getParent() != null) {
                    jPMain.remove(beranda.getParent());
                    beranda.setVisible(false);
                }
                if (mstUser.getParent() != null) {
                    jPMain.remove(mstUser.getParent());
                    mstUser.setVisible(false);
                }
                if (mstRole.getParent() != null) {
                    jPMain.remove(mstRole.getParent());
                    mstRole.setVisible(false);
                }
                if (mstArmada.getParent() != null) {
                    jPMain.remove(mstArmada.getParent());
                    mstArmada.setVisible(false);
                }
                if (mstHarga.getParent() != null) {
                    jPMain.remove(mstHarga.getParent());
                    mstHarga.setVisible(false);
                }
                
                if (mstFaktur.getParent() != null) {
                    jPMain.remove(mstFaktur.getParent());
                    mstFaktur.setVisible(false);
                }

                mstKirim.setVisible(true);
            }
        });
        
        itemMenu mnuInvoice = new itemMenu(null, true, iconInvoice, "Fatkur Pelanggan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jPMain.add(mstFaktur, BorderLayout.WEST);
                if (beranda.getParent() != null) {
                    jPMain.remove(beranda.getParent());
                    beranda.setVisible(false);
                }
                if (mstUser.getParent() != null) {
                    jPMain.remove(mstUser.getParent());
                    mstUser.setVisible(false);
                }
                if (mstRole.getParent() != null) {
                    jPMain.remove(mstRole.getParent());
                    mstRole.setVisible(false);
                }
                if (mstArmada.getParent() != null) {
                    jPMain.remove(mstArmada.getParent());
                    mstArmada.setVisible(false);
                }
                if (mstHarga.getParent() != null) {
                    jPMain.remove(mstHarga.getParent());
                    mstHarga.setVisible(false);
                }
                
                if (mstKirim.getParent() != null) {
                    jPMain.remove(mstKirim.getParent());
                    mstKirim.setVisible(false);
                }

                mstFaktur.setVisible(true);
            }
        });

        // MENU PENGATURAN
        itemMenu menuUser = new itemMenu(null, true, iconUser, "Pengguna", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jPMain.add(mstUser, BorderLayout.WEST);
                if (beranda.getParent() != null) {
                    jPMain.remove(beranda.getParent());
                    beranda.setVisible(false);
                }
                if (mstRole.getParent() != null) {
                    jPMain.remove(mstRole.getParent());
                    mstRole.setVisible(false);
                }
                if (mstArmada.getParent() != null) {
                    jPMain.remove(mstArmada.getParent());
                    mstArmada.setVisible(false);
                }
                if (mstHarga.getParent() != null) {
                    jPMain.remove(mstHarga.getParent());
                    mstHarga.setVisible(false);
                }
                if (mstKirim.getParent() != null) {
                    jPMain.remove(mstKirim.getParent());
                    mstKirim.setVisible(false);
                }
                if (mstFaktur.getParent() != null) {
                    jPMain.remove(mstFaktur.getParent());
                    mstFaktur.setVisible(false);
                }

                mstUser.setVisible(true);
            }
        });
        itemMenu menuRole = new itemMenu(null, true, iconUser, "Jenis Pengguna", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jPMain.add(mstRole, BorderLayout.WEST);
                if (beranda.getParent() != null) {
                    jPMain.remove(beranda.getParent());
                    beranda.setVisible(false);
                }
                if (mstUser.getParent() != null) {
                    jPMain.remove(mstUser.getParent());
                    mstUser.setVisible(false);
                }
                if (mstArmada.getParent() != null) {
                    jPMain.remove(mstArmada.getParent());
                    mstArmada.setVisible(false);
                }
                if (mstHarga.getParent() != null) {
                    jPMain.remove(mstHarga.getParent());
                    mstHarga.setVisible(false);
                }
                if (mstKirim.getParent() != null) {
                    jPMain.remove(mstKirim.getParent());
                    mstKirim.setVisible(false);
                }
                if (mstFaktur.getParent() != null) {
                    jPMain.remove(mstFaktur.getParent());
                    mstFaktur.setVisible(false);
                }

                mstRole.setVisible(true);
            }
        });

        itemMenu menuHome = new itemMenu(iconHome, false, null, "Beranda", new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                jPMain.add(beranda, BorderLayout.CENTER);
                    if (mstArmada.getParent() != null) {
                        jPMain.remove(mstArmada.getParent());
                        mstArmada.setVisible(false);
                    }
                    if (mstUser.getParent() != null) {
                        jPMain.remove(mstUser.getParent());
                        mstUser.setVisible(false);
                    }
                    if (mstRole.getParent() != null) {
                        jPMain.remove(mstRole.getParent());
                        mstRole.setVisible(false);
                    }
                    if (mstHarga.getParent() != null) {
                        jPMain.remove(mstHarga.getParent());
                        mstHarga.setVisible(false);
                    }

                    if (mstKirim.getParent() != null) {
                        jPMain.remove(mstKirim.getParent());
                        mstKirim.setVisible(false);
                    }

                    if (mstFaktur.getParent() != null) {
                        jPMain.remove(mstFaktur.getParent());
                        mstFaktur.setVisible(false);
                    }

                    beranda.setVisible(true); 
            }
        });
        itemMenu menuMaster = new itemMenu(iconMaster, false, null, "Data", null, masKaryawan, masArmada, masHarga);
        itemMenu menuTransaksi = new itemMenu(iconTransaksi, false, null, "Transaksi", null, mnuPengiriman, mnuInvoice);
        itemMenu menuLaporan = new itemMenu(iconLaporan, false, null, "Laporan", null, lapKaryawan, laptarifKapal, laptarifLCL, lapPengiriman);
        itemMenu menuSetting = new itemMenu(iconSetting, false, null, "Pengaturan", null, menuUser, menuRole);

        addMenu(menuHome, menuMaster, menuTransaksi, menuLaporan, menuSetting);

    }

    private void addMenu(itemMenu... menu) {
        for (int i = 0; i < menu.length; i++) {
            pn_menus.add(menu[i]);
            ArrayList<itemMenu> subMenu = menu[i].getSubMenu();
            for (itemMenu m : subMenu) {
                addMenu(m);
            }

        }
        pn_menus.revalidate();
    }
}
