/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package apptracking.entry;

import apptracking.funct.functionCollection;
import apptracking.funct.koneksi;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Randy_Machfud
 */
public class masterArmada extends javax.swing.JPanel {
    
    private DefaultTableModel tabArmada;
    private Connection conn= new koneksi().connect();
    private functionCollection funct=new functionCollection();
    private String idOld="";
    private String jnsOld="";

    /**
     * Creates new form masterArmada
     */
    public masterArmada() {
        initComponents();
        funct.setMaxLength(txtTon,5);
        funct.setMaxLength(txtDimensi1, 4);
        funct.setMaxLength(txtDimensi2, 4);
        funct.setMaxLength(txtDimensi3, 4);
        
        Object[] baris={"Type","Jenis","Kapasitas","Dimensi"};
        tabArmada = new DefaultTableModel(null,baris);
        
        doLoadDataTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Ubahor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        cmbJenis = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTon = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDimensi1 = new javax.swing.JTextField();
        txtDimensi2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lblDimensi = new javax.swing.JLabel();
        txtDimensi3 = new javax.swing.JTextField();
        lblSatuan = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblArmada = new javax.swing.JTable();
        btnUlang = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        jLabel1.setText("Tipe Kendaraan");

        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Truk", "Container", "Kapal" }));
        cmbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTypeActionPerformed(evt);
            }
        });

        cmbJenis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Engkel", "Engkel Double", "Tronton 8 Meter", "Tronton 9,5 Meter", "Fuso 6 Meter" }));

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        jLabel2.setText("Jenis Kendaraan");

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        jLabel3.setText("Kapasitas");

        txtTon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTonActionPerformed(evt);
            }
        });
        txtTon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTonKeyTyped(evt);
            }
        });

        jLabel4.setText("Ton");

        jLabel5.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        jLabel5.setText("Dimensi");

        txtDimensi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDimensi1ActionPerformed(evt);
            }
        });
        txtDimensi1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDimensi1KeyTyped(evt);
            }
        });

        txtDimensi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDimensi2ActionPerformed(evt);
            }
        });
        txtDimensi2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDimensi2KeyTyped(evt);
            }
        });

        jLabel6.setText("x");

        lblDimensi.setText("x");

        txtDimensi3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDimensi3ActionPerformed(evt);
            }
        });
        txtDimensi3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDimensi3KeyTyped(evt);
            }
        });

        lblSatuan.setText("CM");

        btnSimpan.setBackground(new java.awt.Color(56, 86, 35));
        btnSimpan.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        btnSimpan.setForeground(new java.awt.Color(255, 255, 255));
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(56, 86, 35));
        btnHapus.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        tblArmada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblArmada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblArmadaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblArmada);

        btnUlang.setBackground(new java.awt.Color(56, 86, 35));
        btnUlang.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        btnUlang.setForeground(new java.awt.Color(255, 255, 255));
        btnUlang.setText("Ulang");
        btnUlang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUlangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTon, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cmbType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbJenis, javax.swing.GroupLayout.Alignment.LEADING, 0, 150, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDimensi1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDimensi2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblDimensi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDimensi3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUlang, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbJenis, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDimensi1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDimensi2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDimensi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDimensi3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSatuan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUlang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTonActionPerformed

    private void txtTonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTonKeyTyped
        if(!txtTon.getText().matches("[0-9]")){
           txtTon.setText(txtTon.getText().replaceAll("[^\\d]", "")); 
        }
    }//GEN-LAST:event_txtTonKeyTyped

    private void txtDimensi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDimensi1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDimensi1ActionPerformed

    private void txtDimensi1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDimensi1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDimensi1KeyTyped

    private void txtDimensi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDimensi2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDimensi2ActionPerformed

    private void txtDimensi2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDimensi2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDimensi2KeyTyped

    private void txtDimensi3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDimensi3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDimensi3ActionPerformed

    private void txtDimensi3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDimensi3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDimensi3KeyTyped

    private void cmbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTypeActionPerformed
        doLoadComboItemType();
    }//GEN-LAST:event_cmbTypeActionPerformed

    private void doLoadComboItemType(){
        if(cmbType.getSelectedItem()!=null){
            cmbJenis.removeAllItems();
            String type=(String) cmbType.getSelectedItem().toString();
            if(type.toUpperCase().equalsIgnoreCase("TRUK")){
                cmbJenis.addItem("Engkel");
                cmbJenis.addItem("Engkel Double");
                cmbJenis.addItem("Tronton 8 Meter");
                cmbJenis.addItem("Tronton 9,5 Meter");
                cmbJenis.addItem("Fuso 6 Meter");
            }else if(type.toUpperCase().equalsIgnoreCase("KAPAL")){
                cmbJenis.addItem("LCT 1000 DWT");
                cmbJenis.addItem("LCT 1200 DWT");
                cmbJenis.addItem("LCT 1500 DWT");
            }else{
                cmbJenis.addItem("Container 20FT");
                cmbJenis.addItem("Container 40FT");
                
            }
            
            if(type.toUpperCase().equalsIgnoreCase("KAPAL")){
                lblDimensi.setVisible(false);
                txtDimensi3.setVisible(false);
                lblSatuan.setText("M");
            }else{
                lblDimensi.setVisible(true);
                txtDimensi3.setVisible(true);
                lblSatuan.setText("CM");
            }
        }
    }
    
    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
       String msg="";
        if(validation()){
           if(idOld.equalsIgnoreCase("") && jnsOld.equalsIgnoreCase("")){
               msg = "Simpan";
           }else{
               msg = "Ubah";
           }
           int result = JOptionPane.showConfirmDialog(getParent(),"Yakin data akan di "+msg+" ?","Konfimasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
           if(result==JOptionPane.YES_OPTION){
               if((idOld==null || idOld.equalsIgnoreCase("")) && (jnsOld.equalsIgnoreCase("") || jnsOld==null)){
                    String type=cmbType.getSelectedItem().toString().toUpperCase().equalsIgnoreCase("TRUK")?"01":
                                cmbType.getSelectedItem().toString().toUpperCase().equalsIgnoreCase("KAPAL")?"03":"02";
                    String jenis=cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("ENGKEL")?"0101":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("ENGKELDOUBLE")?"0102":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("TRONTON8METER")?"0103":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("TRONTON9,5METER")?"0104":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("FUSO6METER")?"0105":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("CONTAINER20FT")?"0201":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("CONTAINER40FT")?"0202":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("LCT1000DWT")?"0301":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("LCT1200DWT")?"0302":"0303";
                    String kapasitas=txtTon.getText();
                    String dimensi="";
                    if(type.toUpperCase().equalsIgnoreCase("KAPAL")){
                        dimensi = txtDimensi1.getText()+"x"+txtDimensi2.getText();
                    }else{
                        dimensi = txtDimensi1.getText()+"x"+txtDimensi2.getText()+"x"+txtDimensi3.getText();
                    }
                    try {
                          String sqlInsert=" insert into mst_armada (type,jenis,kapasitas,dimensi,usrcrt,dtcrt) "
                                  + "        values ('"+type+"' , '"+jenis+"', "+kapasitas+", '"+dimensi+"' , '"+"test"+"' , '"+funct.setDateToString(new Date())+"') ";
                          Statement stat= conn.createStatement();
                          stat.execute(sqlInsert);
                          doLoadDataTable();
                          doReset();
                          //tidakAktif();
                          JOptionPane.showMessageDialog(null, "Data berhasil di simpan.");
                      } catch (Exception e) {
                          System.out.println("Gagal Simpan Data Error "+e);
                          JOptionPane.showMessageDialog(null, "Data gagal di simpan."+e);
                      }
               }else{
                    String type=cmbType.getSelectedItem().toString().toUpperCase().equalsIgnoreCase("TRUK")?"01":
                                cmbType.getSelectedItem().toString().toUpperCase().equalsIgnoreCase("KAPAL")?"03":"02";
                    String jenis=cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("ENGKEL")?"0101":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("ENGKELDOUBLE")?"0102":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("TRONTON8METER")?"0103":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("TRONTON9,5METER")?"0104":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("FUSO6METER")?"0105":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("CONTAINER20FT")?"0201":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("CONTAINER40FT")?"0202":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("LCT1000DWT")?"0301":
                                 cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ","").equalsIgnoreCase("LCT1200DWT")?"0302":"0303";
                    String kapasitas=txtTon.getText();
                    String dimensi="";
                    if(type.toUpperCase().equalsIgnoreCase("03")){
                        dimensi = txtDimensi1.getText()+"x"+txtDimensi2.getText();
                    }else{
                        dimensi = txtDimensi1.getText()+"x"+txtDimensi2.getText()+"x"+txtDimensi3.getText();
                    }
                    System.out.println("Combo :"+cmbJenis.getSelectedItem().toString().toUpperCase().replaceAll(" ",""));
                    System.out.println("type New "+type);
                    System.out.println("Jenis New "+jenis);
                    System.out.println("type OLD "+idOld);
                    System.out.println("Jenis OLD "+jnsOld);
                    try {
                        String sqlUpdate=" update mst_armada set type = '"+type+"' ,"
                                + "                          jenis = '"+jenis+"', "
                                + "                          kapasitas = "+kapasitas+", "
                                + "                          dimensi = '"+dimensi+"' "
                                + "        where type = '"+idOld+"' and jenis = '"+jnsOld+"' ";
                        Statement stat= conn.createStatement();
                        stat.execute(sqlUpdate);
                        doLoadDataTable();
                        doReset();
                        JOptionPane.showMessageDialog(null, "Data berhasil di edit.");
                    } catch (Exception e) {
                        System.out.println("Gagal Ubah Data Error "+e);
                        JOptionPane.showMessageDialog(null, "Data gagal di edit."+e);
                    }
               }
           }else{
               
           }
       }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        if(idOld!=null && !idOld.equals("") && jnsOld!=null && !jnsOld.equals("")){
            int result = JOptionPane.showConfirmDialog(getParent(),"Yakin data akan di hapus ?","Konfimasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(result==JOptionPane.YES_OPTION){
                try {
                    String sqlDelete=" delete from mst_armada where type = '"+idOld+"' and jenis='"+jnsOld+"' " ;
                    Statement stat= conn.createStatement();
                    stat.execute(sqlDelete);
                    doLoadDataTable();
                    doReset();
                    //tidakAktif();
                    JOptionPane.showMessageDialog(null, "Data berhasil di hapus.");
                    //conn.close();
                } catch (Exception e) {
                    System.out.println("Gagal Hapus Data Error "+e);
                    JOptionPane.showMessageDialog(null, "Data gagal di hapus."+e);
                }
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void tblArmadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblArmadaMouseClicked
        if(tabArmada.getColumnCount() > 0){
          //aktif();
          String[] rowData = new String[tabArmada.getColumnCount()];
          for (int col = 0; col < tabArmada.getColumnCount(); col++) {
              rowData[col] = String.valueOf(tabArmada.getValueAt(tblArmada.rowAtPoint(evt.getPoint()), col));
          }
          idOld = rowData[0].toUpperCase().equalsIgnoreCase("TRUK")?"01":
                  rowData[0].toUpperCase().equalsIgnoreCase("KAPAL")?"03":"02";
          cmbType.setSelectedItem(rowData[0]);
          doLoadComboItemType();
          jnsOld = rowData[1].toUpperCase().replaceAll(" ","").equalsIgnoreCase("ENGKEL")?"0101":
                   rowData[1].toUpperCase().replaceAll(" ","").equalsIgnoreCase("ENGKELDOUBLE")?"0102":
                   rowData[1].toUpperCase().replaceAll(" ","").equalsIgnoreCase("TRONTON8METER")?"0103":
                   rowData[1].toUpperCase().replaceAll(" ","").equalsIgnoreCase("TRONTON9,5METER")?"0104":
                   rowData[1].toUpperCase().replaceAll(" ","").equalsIgnoreCase("FUSO6METER")?"0105":
                   rowData[1].toUpperCase().replaceAll(" ","").equalsIgnoreCase("CONTAINER20FT")?"0201":
                   rowData[1].toUpperCase().replaceAll(" ","").equalsIgnoreCase("CONTAINER40FT")?"0202":
                   rowData[1].toUpperCase().replaceAll(" ","").equalsIgnoreCase("LCT1000DWT")?"0301":
                   rowData[1].toUpperCase().replaceAll(" ","").equalsIgnoreCase("LCT1200DWT")?"0302":"0303";
          cmbJenis.setSelectedItem(rowData[1]);
          txtTon.setText(rowData[2]);
          String[] dimensiSplt=rowData[3].split("x");
          if(rowData[0].toUpperCase().equalsIgnoreCase("KAPAL")){
              lblDimensi.setVisible(false);
              lblSatuan.setText("M");
              txtDimensi1.setText(dimensiSplt[0]);
              txtDimensi2.setText(dimensiSplt[1]);
          }else{
              lblDimensi.setVisible(true);
              lblSatuan.setText("CM");
              txtDimensi1.setText(dimensiSplt[0]);
              txtDimensi2.setText(dimensiSplt[1]);
              txtDimensi3.setText(dimensiSplt[2]);
          }
          
          btnSimpan.setLabel("Ubah");
          cmbType.requestFocus();
       }
    }//GEN-LAST:event_tblArmadaMouseClicked

    private void btnUlangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUlangActionPerformed
        doReset();
    }//GEN-LAST:event_btnUlangActionPerformed

    protected boolean validation(){
        boolean isValid=true;
        if (isValid) {
            if(cmbType.getSelectedItem()==null){
                isValid=false;
                JOptionPane.showMessageDialog(null,"Type Kendaraan tidak boleh kosong");
                cmbType.requestFocus();
            }else{
               if(cmbType.getSelectedIndex()<0){
                   isValid=false;
                   JOptionPane.showMessageDialog(null,"Type Kendaraan tidak boleh kosong");
                   cmbType.requestFocus();
               }else{
                   if(cmbType.getSelectedItem().toString().toUpperCase().equalsIgnoreCase("KAPAL")){
                       if(txtDimensi1.getText()==null){
                           isValid=false;
                           JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                           txtDimensi1.requestFocus();
                       }else{
                           if(txtDimensi1.getText().equalsIgnoreCase("")){
                               isValid=false;
                               JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                               txtDimensi1.requestFocus();
                            }
                       }
                       
                       if(txtDimensi2.getText()==null){
                           isValid=false;
                           JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                           txtDimensi2.requestFocus();
                       }else{
                           if(txtDimensi2.getText().equalsIgnoreCase("")){
                               isValid=false;
                               JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                               txtDimensi2.requestFocus();
                            }
                       }
                   }else{
                       if(txtDimensi1.getText()==null){
                           isValid=false;
                           JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                           txtDimensi1.requestFocus();
                       }else{
                           if(txtDimensi1.getText().equalsIgnoreCase("")){
                               isValid=false;
                               JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                               txtDimensi1.requestFocus();
                            }
                       }
                       
                       if(txtDimensi2.getText()==null){
                           isValid=false;
                           JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                           txtDimensi2.requestFocus();
                       }else{
                           if(txtDimensi2.getText().equalsIgnoreCase("")){
                               isValid=false;
                               JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                               txtDimensi2.requestFocus();
                            }
                       }
                       
                       if(txtDimensi3.getText()==null){
                           isValid=false;
                           JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                           txtDimensi3.requestFocus();
                       }else{
                           if(txtDimensi3.getText().equalsIgnoreCase("")){
                               isValid=false;
                               JOptionPane.showMessageDialog(null,"Dimensi tidak boleh kosong");
                               txtDimensi3.requestFocus();
                            }
                       }
                   }
               }
            }
            
            if(cmbJenis.getSelectedItem()==null){
                isValid=false;
                JOptionPane.showMessageDialog(null,"Jenis Kendaraan tidak boleh kosong");
                cmbJenis.requestFocus();
            }else{
                if(cmbJenis.getSelectedIndex()<0){
                    isValid=false;
                    JOptionPane.showMessageDialog(null,"Jenis Kendaraan tidak boleh kosong");
                    cmbJenis.requestFocus();
                }
            }
            
            if(txtTon.getText()==null){
                isValid=false;
                JOptionPane.showMessageDialog(null,"Kapasitas tidak boleh kosong");
                txtTon.requestFocus();
            }else{
                if(txtTon.getText().equalsIgnoreCase("")){
                    isValid=false;
                    JOptionPane.showMessageDialog(null,"Kapasitas tidak boleh kosong");
                    txtTon.requestFocus();
                }
            }
        }
        return isValid;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUlang;
    private javax.swing.JComboBox cmbJenis;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDimensi;
    private javax.swing.JLabel lblSatuan;
    private javax.swing.JTable tblArmada;
    private javax.swing.JTextField txtDimensi1;
    private javax.swing.JTextField txtDimensi2;
    private javax.swing.JTextField txtDimensi3;
    private javax.swing.JTextField txtTon;
    // End of variables declaration//GEN-END:variables

    private void doLoadDataTable() {
        tblArmada.revalidate();
        tblArmada.repaint();
        tblArmada.setModel(tabArmada);
        if(tabArmada.getRowCount()>0){
            tabArmada.setRowCount(0);  
        }
        String sql = "select * from mst_armada";
        try {
            Statement stat= conn.createStatement();
            ResultSet hasil=stat.executeQuery(sql);
            
            while (hasil.next()) {
                String type=hasil.getString("type").equalsIgnoreCase("01")?"Truk":
                            hasil.getString("type").equalsIgnoreCase("03")?"Kapal":"Container";
                String jenis=hasil.getString("jenis").equalsIgnoreCase("0101")?"Engkel":
                                 hasil.getString("jenis").equalsIgnoreCase("0102")?"Engkel Double":
                                 hasil.getString("jenis").equalsIgnoreCase("0103")?"Tronton 8 Meter":
                                 hasil.getString("jenis").equalsIgnoreCase("0104")?"Tronton 9,5 Meter":
                                 hasil.getString("jenis").equalsIgnoreCase("0105")?"Fuso 6 Meter":
                                 hasil.getString("jenis").equalsIgnoreCase("0201")?"Container 20FT":
                                 hasil.getString("jenis").equalsIgnoreCase("0202")?"Container 40FT":
                                 hasil.getString("jenis").equalsIgnoreCase("0301")?"LCT 1000 DWT":
                                 hasil.getString("jenis").equalsIgnoreCase("0302")?"LCT 1200 DWT":"LCT 1500 DWT";
                String kapasitas=hasil.getString("kapasitas");
                String dimensi=hasil.getString("dimensi");
                String [] data={type,jenis,kapasitas,dimensi};
                tabArmada.addRow(data);
            }
        } catch (Exception e) {
            System.out.println("Menampilkan Data Error "+e);
        }  
    }

    private void doReset() {
        idOld="";
        jnsOld="";
        btnSimpan.setLabel("Simpan");
        cmbType.setSelectedIndex(0);
        cmbJenis.setSelectedIndex(0);
        txtTon.setText("");
        txtDimensi1.setText("");
        txtDimensi2.setText("");
        txtDimensi3.setText("");
        cmbType.requestFocus();
    }
}
