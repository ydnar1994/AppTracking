/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package apptracking.entry;

import apptracking.funct.functionCollection;
import apptracking.funct.koneksi;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Randy_Machfud
 */
public class masterRole extends javax.swing.JPanel {
    
    private DefaultTableModel tabRole;
    private Connection conn= new koneksi().connect();
    private functionCollection funct=new functionCollection();
    private String idOld="";

    /**
     * Creates new form masterRole
     */
    public masterRole() {
        initComponents();
        funct.setMaxLength(txtRoleId, 2);
        funct.setMaxLength(txtRoleNm, 100);
        
        Object[] baris={"Role Id","Nama Role"};
        tabRole = new DefaultTableModel(null,baris);
        
        doLoadDataTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtRoleId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtRoleNm = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRole = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnUlang = new javax.swing.JButton();

        jLabel1.setText("Role Id");

        jLabel2.setText("Nama Role");

        tblRole.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRole.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRoleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRole);

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnUlang.setText("Ulang");
        btnUlang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUlangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(49, 49, 49)
                        .addComponent(txtRoleId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(27, 27, 27)
                        .addComponent(txtRoleNm, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUlang, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRoleId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRoleNm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnHapus)
                    .addComponent(btnUlang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        if(idOld!=null && !idOld.equals("")){
            int result = JOptionPane.showConfirmDialog(getParent(),"Yakin data akan di hapus ?","Konfimasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(result==JOptionPane.YES_OPTION){
                try {
                    String sqlDelete=" delete from mst_role where roleid = '"+idOld+"'";
                    Statement stat= conn.createStatement();
                    stat.execute(sqlDelete);
                    doLoadDataTable();
                    doReset();
                    //tidakAktif();
                    JOptionPane.showMessageDialog(null, "Data berhasil di hapus.");
                    //conn.close();
                } catch (Exception e) {
                    System.out.println("Gagal Hapus Data Error "+e);
                    JOptionPane.showMessageDialog(null, "Data gagal di hapus."+e);
                }
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void tblRoleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRoleMouseClicked
       if(tabRole.getColumnCount() > 0){
          //aktif();
          String[] rowData = new String[tabRole.getColumnCount()];
          for (int col = 0; col < tabRole.getColumnCount(); col++) {
              rowData[col] = String.valueOf(tabRole.getValueAt(tblRole.rowAtPoint(evt.getPoint()), col));
          }
          idOld = rowData[0];
          txtRoleId.setText(rowData[0]);
          txtRoleNm.setText(rowData[1]);
          
          btnSimpan.setLabel("Edit");
          txtRoleId.requestFocus();
       }
    }//GEN-LAST:event_tblRoleMouseClicked

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
       String msg="";
        if(validation()){
           if(idOld.equalsIgnoreCase("")){
               msg = "Simpan";
           }else{
               msg = "Edit";
           }
           int result = JOptionPane.showConfirmDialog(getParent(),"Yakin data akan di "+msg+" ?","Konfimasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
           if(result==JOptionPane.YES_OPTION){
               if(idOld==null || idOld.equalsIgnoreCase("")){
                   String roleid=txtRoleId.getText();
                    String rolenm=txtRoleNm.getText();

                    try {
                          String sqlInsert=" insert into mst_role (roleid,rolenm,usrcrt,dtcrt) "
                                  + "        values ('"+roleid+"' , '"+rolenm+"' , '"+"test"+"' , '"+funct.setDateToString(new Date())+"') ";
                          Statement stat= conn.createStatement();
                          stat.execute(sqlInsert);
                          doLoadDataTable();
                          doReset();
                          //tidakAktif();
                          JOptionPane.showMessageDialog(null, "Data berhasil di simpan.");
                      } catch (Exception e) {
                          System.out.println("Gagal Simpan Data Error "+e);
                          JOptionPane.showMessageDialog(null, "Data gagal di simpan."+e);
                      }
               }else{
                    String id=txtRoleId.getText();
                    String nama=txtRoleNm.getText();

                    try {
                        String sqlUpdate=" update mst_role set roleid = '"+id+"' ,"
                                + "                          rolenm = '"+nama+"' "
                                + "        where roleid = '"+idOld+"'";
                        Statement stat= conn.createStatement();
                        stat.execute(sqlUpdate);
                        doLoadDataTable();
                        doReset();
                        JOptionPane.showMessageDialog(null, "Data berhasil di edit.");
                    } catch (Exception e) {
                        System.out.println("Gagal Edit Data Error "+e);
                        JOptionPane.showMessageDialog(null, "Data gagal di edit."+e);
                    }
               }
           }else{
               
           }
       }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUlangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUlangActionPerformed
        doReset();
    }//GEN-LAST:event_btnUlangActionPerformed

    protected boolean validation(){
        boolean isValid=true;
        if (isValid) {
            if(txtRoleId.getText()==null){
                isValid=false;
                JOptionPane.showMessageDialog(null,"Role Id tidak boleh kosong");
                txtRoleId.requestFocus();
            }else{
               if(txtRoleId.getText().equalsIgnoreCase("")){
                   isValid=false;
                   JOptionPane.showMessageDialog(null,"Role Id tidak boleh kosong");
                   txtRoleId.requestFocus();
               }
            }
            
            if(txtRoleNm.getText()==null){
                isValid=false;
                JOptionPane.showMessageDialog(null,"Nama Role tidak boleh kosong");
                txtRoleNm.requestFocus();
            }else{
                if(txtRoleNm.getText().equalsIgnoreCase("")){
                    isValid=false;
                    JOptionPane.showMessageDialog(null,"Nama Role tidak boleh kosong");
                    txtRoleNm.requestFocus();
                }
            }
        }
        return isValid;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnHapus;
    public javax.swing.JButton btnSimpan;
    public javax.swing.JButton btnUlang;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tblRole;
    public javax.swing.JTextField txtRoleId;
    public javax.swing.JTextField txtRoleNm;
    // End of variables declaration//GEN-END:variables

    private void doLoadDataTable() {
        tblRole.revalidate();
        tblRole.repaint();
        tblRole.setModel(tabRole);
        if(tabRole.getRowCount()>0){
            tabRole.setRowCount(0);  
        }
        String sql = "select * from mst_role";
        try {
            Statement stat= conn.createStatement();
            ResultSet hasil=stat.executeQuery(sql);

            while (hasil.next()) {
                String roleid=hasil.getString("roleid");
                String rolenm=hasil.getString("rolenm");

                String [] data={roleid,rolenm};
                tabRole.addRow(data);
            }
        } catch (Exception e) {
            System.out.println("Menampilkan Data Error "+e);
        }    
    }

    private void doReset() {
        idOld="";
        btnSimpan.setLabel("Simpan");
        txtRoleId.setText("");
        txtRoleNm.setText("");
        txtRoleId.requestFocus();
    }
}
